---
AWSTemplateFormatVersion: 2010-09-09
Description: Openvidu Load Test Orchestrator

Parameters:
  KeyName:
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the instance. THIS MUST BE THE SAME KEY USED FOR OPENVIDU SERVER CLOUDFORMATION INSTANCE. See https://github.com/OpenVidu/openvidu-loadtest/tree/master/aws#the-sut-subject-under-test-cloudformation-template"
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: "Must be the name of an existing EC2 KeyPair."
  AWSAccessKey:
    Description: AWS access key for accessing OpenVidu Server instance.
    Type: String
    Default: aws_access_key
  AWSSecretAccessKey:
    Description: AWS secret access key.
    Type: String
    Default: aws_secret_access_key
  InstanceType:
    Description: "EC2 Instance type"
    Type: String
    Default: c5.xlarge
    AllowedValues:
    - c5.large
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    ConstraintDescription: "Must be a valid EC2 instance type."

Resources:
  TestOrchestrator:
    Type: 'AWS::EC2::Instance'
    Metadata:
      Comment: "Install and configure every necessary service for running the tests"
      AWS::CloudFormation::Init:
        config:
          files:
            "/etc/cfn/cfn-hup.conf":
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: "000400"
              owner: "root"
              group: "root"
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.TestOrchestrator.Metadata.AWS::CloudFormation::Init
                action=/usr/local/bin/cfn-init -v --stack ${AWS::StackName} --resource TestOrchestrator --region ${AWS::Region}
              mode: "000400"
              owner: "root"
              group: "root"
            "/usr/local/bin/installSoftware.sh":
              content: |
                #!/bin/bash
                mkdir /opt/openvidu && mkdir /opt/openvidu/testload

                # Install Java, Maven, jq and AWS-CLI
                apt-get update
                apt-get install -y default-jdk
                apt-get install -y maven
                apt-get install -y jq
                export LC_ALL=C
                pip install --force-reinstall pip==18.0
                hash -d pip
                pip install --force-reinstall awscli==1.16.44

                # Install R
                apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
                add-apt-repository 'deb [arch=amd64,i386] https://cran.rstudio.com/bin/linux/ubuntu xenial/'
                apt-get update
                apt-get install -y r-base
                echo "install.packages(\"readr\", repos=\"https://cran.rstudio.com\")" | R --no-save
                echo "install.packages(\"ggplot2\", repos=\"https://cran.rstudio.com\")" | R --no-save

                # Configure AWS-CLI
                su -l ubuntu -c "aws configure set aws_access_key_id ${AWSAccessKey}"
                su -l ubuntu -c "aws configure set aws_secret_access_key ${AWSSecretAccessKey}"
                su -l ubuntu -c "aws configure set region ${AWS::Region}"
                su -l ubuntu -c "aws configure set output json"

                # Clone openvidu-loadtest repo
                git clone https://github.com/OpenVidu/openvidu-loadtest.git /home/ubuntu/openvidu-loadtest
                cd /home/ubuntu/openvidu-loadtest && git checkout recording_loadtest

              mode: "000755"
              owner: "root"
              group: "root"
    Properties:
      ImageId:  ami-03ef731cc103c9f09
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref TestOrchestratorSecurityGroup
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash
            set -eu -o pipefail
            apt-get update
            apt-get install -y python-pip
            pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz

            cfn-init --region ${AWS::Region} --stack ${AWS::StackId} --resource TestOrchestrator

            /usr/local/bin/installSoftware.sh || { echo "[Openvidu] error installing software"; exit 1; }

            # sending the finish call
            /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource WaitCondition --region ${AWS::Region}
      BlockDeviceMappings:
        -
          DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 16

  TestOrchestratorSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Openvidu ports
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      - IpProtocol: udp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  WaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
        Count: 1

Outputs:
  OpenViduURL:
    Description: "Use this IP to connect to the Test Orchestrator through ssh (ssh -i /path/to/your/key.pem ubuntu@PUBLIC_IP)"
    Value: !Join
      - ''
      - - !GetAtt TestOrchestrator.PublicIp
